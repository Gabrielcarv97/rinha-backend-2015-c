networks:
  rinha-network:
    driver: bridge
  payment-processor:
    external: true

services:
  app1:
    build: ./payment-processor
    environment:
      - ConnectionStrings__Default=Host=db;Database=rinha;Username=postgres;Password=postgres;Pooling=true;Minimum Pool Size=5;Maximum Pool Size=100
      - ASPNETCORE_URLS=http://+:8080
      - ASPNETCORE_ENVIRONMENT=Production
      - PaymentProcessors__Default=http://payment-processor-default:8080
      - PaymentProcessors__Fallback=http://payment-processor-fallback:8080
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - rinha-network
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "90MB"

  app2:
    build: ./payment-processor
    environment:
      - ConnectionStrings__Default=Host=db;Database=rinha;Username=postgres;Password=postgres;Pooling=true;Minimum Pool Size=5;Maximum Pool Size=100
      - ASPNETCORE_URLS=http://+:8080
      - ASPNETCORE_ENVIRONMENT=Production
      - PaymentProcessors__Default=http://payment-processor-default:8080
      - PaymentProcessors__Fallback=http://payment-processor-fallback:8080
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - rinha-network
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "90MB"

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rinha
    command: [
      "postgres",
      "-c", "max_connections=100",
      "-c", "shared_buffers=32MB",
      "-c", "effective_cache_size=64MB",
      "-c", "maintenance_work_mem=16MB",
      "-c", "checkpoint_completion_target=0.9",
      "-c", "wal_buffers=4MB",
      "-c", "default_statistics_target=100",
      "-c", "random_page_cost=1.1",
      "-c", "effective_io_concurrency=200",
      "-c", "work_mem=1MB",
      "-c", "deadlock_timeout=1s",
      "-c", "lock_timeout=30s",
      "-c", "fsync=off",
      "-c", "synchronous_commit=off",
      "-c", "full_page_writes=off"
    ]
    networks:
      - rinha-network
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d rinha"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "60MB"

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly no --maxmemory 40mb --maxmemory-policy allkeys-lru --protected-mode no
    networks:
      - rinha-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "60MB"

  nginx:
    image: nginx:alpine
    ports:
      - "9999:9999"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app1
      - app2
    networks:
      - rinha-network
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "40MB"

volumes:
  db_data:
  redis_data:
